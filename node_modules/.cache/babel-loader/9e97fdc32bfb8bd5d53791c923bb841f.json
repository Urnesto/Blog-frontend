{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SimpleMdeReact = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _easymde = _interopRequireDefault(require(\"easymde\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar _id = 0;\n\nvar generateId = function generateId() {\n  return \"simplemde-editor-\".concat(++_id);\n};\n\nvar useHandleEditorInstanceLifecycle = function useHandleEditorInstanceLifecycle(_ref) {\n  var options = _ref.options,\n      id = _ref.id,\n      currentValueRef = _ref.currentValueRef,\n      textRef = _ref.textRef;\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      editor = _useState2[0],\n      setEditor = _useState2[1];\n\n  var imageUploadCallback = (0, _react.useCallback)(function (file, onSuccess, onError) {\n    var imageUpload = options === null || options === void 0 ? void 0 : options.imageUploadFunction;\n\n    if (imageUpload) {\n      var _onSuccess = function _onSuccess(url) {\n        onSuccess(url);\n      };\n\n      imageUpload(file, _onSuccess, onError);\n    }\n  }, [options === null || options === void 0 ? void 0 : options.imageUploadFunction]);\n  var editorRef = (0, _react.useRef)(editor);\n  editorRef.current = editor;\n  (0, _react.useEffect)(function () {\n    var editor;\n\n    if (textRef) {\n      var initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current\n      };\n      var imageUploadFunction = (options === null || options === void 0 ? void 0 : options.imageUploadFunction) ? imageUploadCallback : undefined;\n      editor = new _easymde.default(Object.assign({}, initialOptions, options, {\n        imageUploadFunction: imageUploadFunction\n      }));\n      setEditor(editor);\n    }\n\n    return function () {\n      var _editor, _editor2;\n\n      (_editor = editor) === null || _editor === void 0 ? void 0 : _editor.toTextArea(); // @ts-expect-error\n\n      (_editor2 = editor) === null || _editor2 === void 0 ? void 0 : _editor2.cleanup();\n    };\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n  var codemirror = (0, _react.useMemo)(function () {\n    return editor === null || editor === void 0 ? void 0 : editor.codemirror;\n  }, [editor === null || editor === void 0 ? void 0 : editor.codemirror]);\n  return {\n    editor: editor,\n    codemirror: codemirror\n  };\n};\n\nvar SimpleMdeReact = /*#__PURE__*/_react.default.forwardRef(function (props, _ref8) {\n  var events = props.events,\n      value = props.value,\n      options = props.options,\n      children = props.children,\n      extraKeys = props.extraKeys,\n      getLineAndCursor = props.getLineAndCursor,\n      getMdeInstance = props.getMdeInstance,\n      getCodemirrorInstance = props.getCodemirrorInstance,\n      onChange = props.onChange,\n      anId = props.id,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"events\", \"value\", \"options\", \"children\", \"extraKeys\", \"getLineAndCursor\", \"getMdeInstance\", \"getCodemirrorInstance\", \"onChange\", \"id\"]);\n  var id = (0, _react.useMemo)(function () {\n    return anId !== null && anId !== void 0 ? anId : generateId();\n  }, [anId]);\n  var elementWrapperRef = (0, _react.useRef)(null);\n  var nonEventChangeRef = (0, _react.useRef)(true); // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n\n  var currentValueRef = (0, _react.useRef)(value);\n  currentValueRef.current = value;\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      textRef = _useState4[0],\n      setTextRef = _useState4[1];\n\n  var _useHandleEditorInsta = useHandleEditorInstanceLifecycle({\n    options: options,\n    id: id,\n    currentValueRef: currentValueRef,\n    textRef: textRef\n  }),\n      editor = _useHandleEditorInsta.editor,\n      codemirror = _useHandleEditorInsta.codemirror;\n\n  (0, _react.useEffect)(function () {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor === null || editor === void 0 ? void 0 : editor.value(value !== null && value !== void 0 ? value : \"\");\n    }\n\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n  var onCodemirrorChangeHandler = (0, _react.useCallback)(function () {\n    if ((editor === null || editor === void 0 ? void 0 : editor.value()) !== currentValueRef.current) {\n      var _editor$value;\n\n      nonEventChangeRef.current = false;\n      onChange === null || onChange === void 0 ? void 0 : onChange((_editor$value = editor === null || editor === void 0 ? void 0 : editor.value()) !== null && _editor$value !== void 0 ? _editor$value : \"\");\n    }\n  }, [editor, onChange]);\n  (0, _react.useEffect)(function () {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options === null || options === void 0 ? void 0 : options.autofocus) {\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.focus();\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.setCursor(codemirror === null || codemirror === void 0 ? void 0 : codemirror.lineCount(), 0);\n    }\n  }, [codemirror, options === null || options === void 0 ? void 0 : options.autofocus]);\n  var getCursorCallback = (0, _react.useCallback)(function () {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && (getLineAndCursor === null || getLineAndCursor === void 0 ? void 0 : getLineAndCursor(codemirror.getDoc().getCursor()));\n  }, [codemirror, getLineAndCursor]);\n  (0, _react.useEffect)(function () {\n    getCursorCallback();\n  }, [getCursorCallback]);\n  (0, _react.useEffect)(function () {\n    editor && (getMdeInstance === null || getMdeInstance === void 0 ? void 0 : getMdeInstance(editor));\n  }, [editor, getMdeInstance]);\n  (0, _react.useEffect)(function () {\n    codemirror && (getCodemirrorInstance === null || getCodemirrorInstance === void 0 ? void 0 : getCodemirrorInstance(codemirror));\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n  (0, _react.useEffect)(function () {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\"extraKeys\", Object.assign({}, extraKeys, codemirror.getOption(\"extraKeys\")));\n    }\n  }, [codemirror, extraKeys]);\n  (0, _react.useEffect)(function () {\n    var _elementWrapperRef$cu;\n\n    var toolbarNode = (_elementWrapperRef$cu = elementWrapperRef.current) === null || _elementWrapperRef$cu === void 0 ? void 0 : _elementWrapperRef$cu.getElementsByClassName(\"editor-toolbarNode\")[0];\n\n    var handler = function handler() {\n      return codemirror && onCodemirrorChangeHandler();\n    };\n\n    toolbarNode === null || toolbarNode === void 0 ? void 0 : toolbarNode.addEventListener(\"click\", handler);\n    return function () {\n      toolbarNode === null || toolbarNode === void 0 ? void 0 : toolbarNode.removeEventListener(\"click\", handler);\n    };\n  }, [codemirror, onCodemirrorChangeHandler]);\n  (0, _react.useEffect)(function () {\n    codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(\"change\", onCodemirrorChangeHandler);\n    codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(\"cursorActivity\", getCursorCallback);\n    return function () {\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(\"change\", onCodemirrorChangeHandler);\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n  var prevEvents = (0, _react.useRef)(events);\n  (0, _react.useEffect)(function () {\n    var isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun && prevEvents.current && Object.entries(prevEvents.current).forEach(function (_ref2) {\n      var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n          event = _ref3[0],\n          handler = _ref3[1];\n\n      handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(event, handler));\n    });\n    events && Object.entries(events).forEach(function (_ref4) {\n      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n          event = _ref5[0],\n          handler = _ref5[1];\n\n      handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(event, handler));\n    });\n    prevEvents.current = events;\n    return function () {\n      events && Object.entries(events).forEach(function (_ref6) {\n        var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n            event = _ref7[0],\n            handler = _ref7[1];\n\n        handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(event, handler));\n      });\n    };\n  }, [codemirror, events]);\n  return /*#__PURE__*/_react.default.createElement(\"div\", Object.assign({\n    id: \"\".concat(id, \"-wrapper\")\n  }, rest, {\n    ref: function ref(aRef) {\n      if (typeof _ref8 === \"function\") {\n        _ref8(aRef);\n      } else if (_ref8) {\n        _ref8.current = aRef;\n      }\n\n      elementWrapperRef.current = aRef;\n    }\n  }), /*#__PURE__*/_react.default.createElement(\"textarea\", {\n    id: id,\n    ref: setTextRef,\n    style: {\n      display: \"none\"\n    }\n  }));\n});\n\nexports.SimpleMdeReact = SimpleMdeReact;\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\nvar _default = SimpleMdeReact;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["_id","generateId","useHandleEditorInstanceLifecycle","options","id","currentValueRef","textRef","editor","setEditor","imageUploadCallback","file","onSuccess","onError","imageUpload","imageUploadFunction","_onSuccess","url","editorRef","current","initialOptions","element","initialValue","undefined","_easymde","Object","assign","toTextArea","cleanup","codemirror","SimpleMdeReact","_react","forwardRef","props","_ref8","events","value","children","extraKeys","getLineAndCursor","getMdeInstance","getCodemirrorInstance","onChange","anId","rest","elementWrapperRef","nonEventChangeRef","setTextRef","onCodemirrorChangeHandler","autofocus","focus","setCursor","lineCount","getCursorCallback","getDoc","getCursor","setOption","getOption","toolbarNode","_elementWrapperRef$cu","getElementsByClassName","handler","addEventListener","removeEventListener","on","off","prevEvents","isNotFirstEffectRun","entries","forEach","event","ref","aRef","style","display","displayName"],"sources":["C:\\Users\\Ernest\\Desktop\\mern-blog-frontend-master\\node_modules\\react-simplemde-editor\\src\\SimpleMdeReact.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport SimpleMDE, { Options } from \"easymde\";\n\nimport type {\n  Doc,\n  Editor,\n  EditorChange,\n  EditorChangeCancellable,\n  EditorChangeLinkedList,\n  EditorSelectionChange,\n  KeyMap,\n  LineHandle,\n  Position,\n} from \"codemirror\";\n\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\nexport type DOMEvent =\n  | \"mousedown\"\n  | \"dblclick\"\n  | \"touchstart\"\n  | \"contextmenu\"\n  | \"keydown\"\n  | \"keypress\"\n  | \"keyup\"\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"dragstart\"\n  | \"dragenter\"\n  | \"dragover\"\n  | \"dragleave\"\n  | \"drop\";\n\nexport type CopyEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof DocumentAndElementEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: DocumentAndElementEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type GlobalEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof GlobalEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: GlobalEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type DefaultEvent = (instance: Editor, ...args: any[]) => void;\n\nexport type IndexEventsSignature = {\n  [key: string]: DefaultEvent | undefined;\n};\n\nexport interface SimpleMdeToCodemirrorEvents\n  extends CopyEvents,\n    GlobalEvents,\n    IndexEventsSignature {\n  change?: (instance: Editor, changeObj: EditorChangeLinkedList) => void;\n  changes?: (instance: Editor, changes: EditorChangeLinkedList[]) => void;\n  beforeChange?: (instance: Editor, changeObj: EditorChangeCancellable) => void;\n  cursorActivity?: (instance: Editor) => void;\n  keyHandled?: (instance: Editor, name: string, event: KeyboardEvent) => void;\n  inputRead?: (instance: Editor, changeObj: EditorChange) => void;\n  electricInput?: (instance: Editor, line: number) => void;\n  beforeSelectionChange?: (\n    instance: Editor,\n    obj: EditorSelectionChange\n  ) => void;\n  viewportChange?: (instance: Editor, from: number, to: number) => void;\n  swapDoc?: (instance: Editor, oldDoc: Doc) => void;\n  gutterClick?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    clickEvent: MouseEvent\n  ) => void;\n  gutterContextMenu?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    contextMenu: MouseEvent\n  ) => void;\n  focus?: (instance: Editor, event: FocusEvent) => void;\n  blur?: (instance: Editor, event: FocusEvent) => void;\n  scroll?: (instance: Editor) => void;\n  refresh?: (instance: Editor) => void;\n  optionChange?: (instance: Editor, option: string) => void;\n  scrollCursorIntoView?: (instance: Editor, event: Event) => void;\n  update?: (instance: Editor) => void;\n  renderLine?: (\n    instance: Editor,\n    line: LineHandle,\n    element: HTMLElement\n  ) => void;\n  overwriteToggle?: (instance: Editor, overwrite: boolean) => void;\n}\n\nexport type GetMdeInstance = (instance: SimpleMDE) => void;\nexport type GetCodemirrorInstance = (instance: Editor) => void;\nexport type GetLineAndCursor = (instance: Position) => void;\n\nexport interface SimpleMDEReactProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  id?: string;\n  onChange?: (value: string) => void;\n  value?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirrorEvents;\n  getMdeInstance?: GetMdeInstance;\n  getCodemirrorInstance?: GetCodemirrorInstance;\n  getLineAndCursor?: GetLineAndCursor;\n}\n\nconst useHandleEditorInstanceLifecycle = ({\n  options,\n  id,\n  currentValueRef,\n  textRef,\n}: {\n  options?: Options;\n  id: string;\n  currentValueRef: React.MutableRefObject<string | undefined>;\n  textRef: HTMLTextAreaElement | null;\n}) => {\n  const [editor, setEditor] = useState<SimpleMDE | null>(null);\n\n  const imageUploadCallback = useCallback(\n    (\n      file: File,\n      onSuccess: (url: string) => void,\n      onError: (error: string) => void\n    ) => {\n      const imageUpload = options?.imageUploadFunction;\n      if (imageUpload) {\n        const _onSuccess = (url: string) => {\n          onSuccess(url);\n        };\n        imageUpload(file, _onSuccess, onError);\n      }\n    },\n    [options?.imageUploadFunction]\n  );\n\n  const editorRef = useRef(editor);\n  editorRef.current = editor;\n\n  useEffect(() => {\n    let editor: SimpleMDE\n    if (textRef) {\n      const initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current,\n      }\n      const imageUploadFunction = options?.imageUploadFunction\n        ? imageUploadCallback\n        : undefined\n      editor = new SimpleMDE(\n        Object.assign({}, initialOptions, options, {\n          imageUploadFunction,\n        })\n      )\n      setEditor(editor)\n    }\n    return () => {\n      editor?.toTextArea()\n      // @ts-expect-error\n      editor?.cleanup()\n    }\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n\n  const codemirror = useMemo(() => {\n    return editor?.codemirror;\n  }, [editor?.codemirror]) as Editor | undefined;\n  return { editor, codemirror };\n};\n\nexport const SimpleMdeReact = React.forwardRef<\n  HTMLDivElement,\n  SimpleMDEReactProps\n>((props, ref) => {\n  const {\n    events,\n    value,\n    options,\n    children,\n    extraKeys,\n    getLineAndCursor,\n    getMdeInstance,\n    getCodemirrorInstance,\n    onChange,\n    id: anId,\n    ...rest\n  } = props;\n\n  const id = useMemo(() => anId ?? generateId(), [anId]);\n\n  const elementWrapperRef = useRef<HTMLDivElement | null>(null);\n  const nonEventChangeRef = useRef<boolean>(true);\n\n  // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n  const currentValueRef = useRef(value);\n  currentValueRef.current = value;\n\n  const [textRef, setTextRef] = useState<HTMLTextAreaElement | null>(null)\n  const { editor, codemirror } = useHandleEditorInstanceLifecycle({\n    options,\n    id,\n    currentValueRef,\n    textRef,\n  });\n\n  useEffect(() => {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor?.value(value ?? \"\");\n    }\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n\n  const onCodemirrorChangeHandler = useCallback(() => {\n    if (editor?.value() !== currentValueRef.current) {\n      nonEventChangeRef.current = false;\n      onChange?.(editor?.value() ?? \"\");\n    }\n  }, [editor, onChange]);\n\n  useEffect(() => {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options?.autofocus) {\n      codemirror?.focus();\n      codemirror?.setCursor(codemirror?.lineCount(), 0);\n    }\n  }, [codemirror, options?.autofocus]);\n\n  const getCursorCallback = useCallback(() => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && getLineAndCursor?.(codemirror.getDoc().getCursor());\n  }, [codemirror, getLineAndCursor]);\n\n  useEffect(() => {\n    getCursorCallback();\n  }, [getCursorCallback]);\n\n  useEffect(() => {\n    editor && getMdeInstance?.(editor);\n  }, [editor, getMdeInstance]);\n\n  useEffect(() => {\n    codemirror && getCodemirrorInstance?.(codemirror);\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n\n  useEffect(() => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\n        \"extraKeys\",\n        Object.assign({}, extraKeys, codemirror.getOption(\"extraKeys\"))\n      );\n    }\n  }, [codemirror, extraKeys]);\n\n  useEffect(() => {\n    const toolbarNode = elementWrapperRef.current?.getElementsByClassName(\n      \"editor-toolbarNode\"\n    )[0];\n    const handler = () => codemirror && onCodemirrorChangeHandler();\n    toolbarNode?.addEventListener(\"click\", handler);\n\n    return () => {\n      toolbarNode?.removeEventListener(\"click\", handler);\n    };\n  }, [codemirror, onCodemirrorChangeHandler]);\n\n  useEffect(() => {\n    codemirror?.on(\"change\", onCodemirrorChangeHandler);\n    codemirror?.on(\"cursorActivity\", getCursorCallback);\n    return () => {\n      codemirror?.off(\"change\", onCodemirrorChangeHandler);\n      codemirror?.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n\n  const prevEvents = useRef(events);\n\n  useEffect(() => {\n    const isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun &&\n      prevEvents.current &&\n      Object.entries(prevEvents.current).forEach(([event, handler]) => {\n        handler && codemirror?.off(event, handler);\n      });\n\n    events &&\n      Object.entries(events).forEach(([event, handler]) => {\n        handler && codemirror?.on(event, handler);\n      });\n    prevEvents.current = events;\n    return () => {\n      events &&\n        Object.entries(events).forEach(([event, handler]) => {\n          handler && codemirror?.off(event, handler);\n        });\n    };\n  }, [codemirror, events]);\n\n  return (\n    <div\n      id={`${id}-wrapper`}\n      {...rest}\n      ref={(aRef) => {\n        if (typeof ref === \"function\") {\n          ref(aRef);\n        } else if (ref) {\n          ref.current = aRef;\n        }\n        elementWrapperRef.current = aRef;\n      }}\n    >\n      <textarea id={id} ref={setTextRef} style={{ display: \"none\" }} />\n    </div>\n  );\n});\n\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\n\nexport default SimpleMdeReact;\n"]},"metadata":{},"sourceType":"script"}