{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"markdown\", function (cmCfg, modeCfg) {\n    var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n    var htmlModeMissing = htmlMode.name == \"null\";\n\n    function getMode(name) {\n      if (CodeMirror.findModeByName) {\n        var found = CodeMirror.findModeByName(name);\n        if (found) name = found.mime || found.mimes[0];\n      }\n\n      var mode = CodeMirror.getMode(cmCfg, name);\n      return mode.name == \"null\" ? null : mode;\n    } // Should characters that affect highlighting be highlighted separate?\n    // Does not include characters that will be output (such as `1.` and `-` for lists)\n\n\n    if (modeCfg.highlightFormatting === undefined) modeCfg.highlightFormatting = false; // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n    // Excess `>` will emit `error` token.\n\n    if (modeCfg.maxBlockquoteDepth === undefined) modeCfg.maxBlockquoteDepth = 0; // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n\n    if (modeCfg.taskLists === undefined) modeCfg.taskLists = false; // Turn on strikethrough syntax\n\n    if (modeCfg.strikethrough === undefined) modeCfg.strikethrough = false;\n    if (modeCfg.emoji === undefined) modeCfg.emoji = false;\n    if (modeCfg.fencedCodeBlockHighlighting === undefined) modeCfg.fencedCodeBlockHighlighting = true;\n    if (modeCfg.fencedCodeBlockDefaultMode === undefined) modeCfg.fencedCodeBlockDefaultMode = 'text/plain';\n    if (modeCfg.xml === undefined) modeCfg.xml = true; // Allow token types to be overridden by user-provided token types.\n\n    if (modeCfg.tokenTypeOverrides === undefined) modeCfg.tokenTypeOverrides = {};\n    var tokenTypes = {\n      header: \"header\",\n      code: \"comment\",\n      quote: \"quote\",\n      list1: \"variable-2\",\n      list2: \"variable-3\",\n      list3: \"keyword\",\n      hr: \"hr\",\n      image: \"image\",\n      imageAltText: \"image-alt-text\",\n      imageMarker: \"image-marker\",\n      formatting: \"formatting\",\n      linkInline: \"link\",\n      linkEmail: \"link\",\n      linkText: \"link\",\n      linkHref: \"string\",\n      em: \"em\",\n      strong: \"strong\",\n      strikethrough: \"strikethrough\",\n      emoji: \"builtin\"\n    };\n\n    for (var tokenType in tokenTypes) {\n      if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n        tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n      }\n    }\n\n    var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/,\n        listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/,\n        taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n    ,\n        atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/,\n        setextHeaderRE = /^ {0,3}(?:\\={1,}|-{2,})\\s*$/,\n        textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/,\n        fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w\\/+#-]*)[^\\n`]*$/,\n        linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n    ,\n        punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/,\n        expandedTab = \"    \"; // CommonMark specifies tab as 4 spaces\n\n    function switchInline(stream, state, f) {\n      state.f = state.inline = f;\n      return f(stream, state);\n    }\n\n    function switchBlock(stream, state, f) {\n      state.f = state.block = f;\n      return f(stream, state);\n    }\n\n    function lineIsEmpty(line) {\n      return !line || !/\\S/.test(line.string);\n    } // Blocks\n\n\n    function blankLine(state) {\n      // Reset linkTitle state\n      state.linkTitle = false;\n      state.linkHref = false;\n      state.linkText = false; // Reset EM state\n\n      state.em = false; // Reset STRONG state\n\n      state.strong = false; // Reset strikethrough state\n\n      state.strikethrough = false; // Reset state.quote\n\n      state.quote = 0; // Reset state.indentedCode\n\n      state.indentedCode = false;\n\n      if (state.f == htmlBlock) {\n        var exit = htmlModeMissing;\n\n        if (!exit) {\n          var inner = CodeMirror.innerMode(htmlMode, state.htmlState);\n          exit = inner.mode.name == \"xml\" && inner.state.tagStart === null && !inner.state.context && inner.state.tokenize.isInText;\n        }\n\n        if (exit) {\n          state.f = inlineNormal;\n          state.block = blockNormal;\n          state.htmlState = null;\n        }\n      } // Reset state.trailingSpace\n\n\n      state.trailingSpace = 0;\n      state.trailingSpaceNewLine = false; // Mark this line as blank\n\n      state.prevLine = state.thisLine;\n      state.thisLine = {\n        stream: null\n      };\n      return null;\n    }\n\n    function blockNormal(stream, state) {\n      var firstTokenOnLine = stream.column() === state.indentation;\n      var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n      var prevLineIsIndentedCode = state.indentedCode;\n      var prevLineIsHr = state.prevLine.hr;\n      var prevLineIsList = state.list !== false;\n      var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n      state.indentedCode = false;\n      var lineIndentation = state.indentation; // compute once per line (on first token)\n\n      if (state.indentationDiff === null) {\n        state.indentationDiff = state.indentation;\n\n        if (prevLineIsList) {\n          state.list = null; // While this list item's marker's indentation is less than the deepest\n          //  list item's content's indentation,pop the deepest list item\n          //  indentation off the stack, and update block indentation state\n\n          while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n            state.listStack.pop();\n\n            if (state.listStack.length) {\n              state.indentation = state.listStack[state.listStack.length - 1]; // less than the first list's indent -> the line is no longer a list\n            } else {\n              state.list = false;\n            }\n          }\n\n          if (state.list !== false) {\n            state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1];\n          }\n        }\n      } // not comprehensive (currently only for setext detection purposes)\n\n\n      var allowsInlineContinuation = !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header && (!prevLineIsList || !prevLineIsIndentedCode) && !state.prevLine.fencedCodeEnd;\n      var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) && state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n      var match = null;\n\n      if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd || state.prevLine.header || prevLineLineIsEmpty)) {\n        stream.skipToEnd();\n        state.indentedCode = true;\n        return tokenTypes.code;\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n        state.quote = 0;\n        state.header = match[1].length;\n        state.thisLine.header = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        state.f = state.inline;\n        return getType(state);\n      } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n        state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n        if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n        stream.eatSpace();\n        return getType(state);\n      } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n        var listType = match[1] ? \"ol\" : \"ul\";\n        state.indentation = lineIndentation + stream.current().length;\n        state.list = true;\n        state.quote = 0; // Add this list item's content's indentation to the stack\n\n        state.listStack.push(state.indentation); // Reset inline styles which shouldn't propagate across list items\n\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n          state.taskList = true;\n        }\n\n        state.f = state.inline;\n        if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n        return getType(state);\n      } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n        state.quote = 0;\n        state.fencedEndRE = new RegExp(match[1] + \"+ *$\"); // try switching mode\n\n        state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2] || modeCfg.fencedCodeBlockDefaultMode);\n        if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n        state.f = state.block = local;\n        if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n        state.code = -1;\n        return getType(state); // SETEXT has lowest block-scope precedence after HR, so check it after\n        //  the others (code, blockquote, list...)\n      } else if ( // if setext set, indicates line after ---/===\n      state.setext || // line before ---/===\n      (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false && !state.code && !isHr && !linkDefRE.test(stream.string) && (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))) {\n        if (!state.setext) {\n          state.header = match[0].charAt(0) == '=' ? 1 : 2;\n          state.setext = state.header;\n        } else {\n          state.header = state.setext; // has no effect on type so we can reset it now\n\n          state.setext = 0;\n          stream.skipToEnd();\n          if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        }\n\n        state.thisLine.header = true;\n        state.f = state.inline;\n        return getType(state);\n      } else if (isHr) {\n        stream.skipToEnd();\n        state.hr = true;\n        state.thisLine.hr = true;\n        return tokenTypes.hr;\n      } else if (stream.peek() === '[') {\n        return switchInline(stream, state, footnoteLink);\n      }\n\n      return switchInline(stream, state, state.inline);\n    }\n\n    function htmlBlock(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState);\n\n      if (!htmlModeMissing) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState);\n\n        if (inner.mode.name == \"xml\" && inner.state.tagStart === null && !inner.state.context && inner.state.tokenize.isInText || state.md_inside && stream.current().indexOf(\">\") > -1) {\n          state.f = inlineNormal;\n          state.block = blockNormal;\n          state.htmlState = null;\n        }\n      }\n\n      return style;\n    }\n\n    function local(stream, state) {\n      var currListInd = state.listStack[state.listStack.length - 1] || 0;\n      var hasExitedList = state.indentation < currListInd;\n      var maxFencedEndInd = currListInd + 3;\n\n      if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n        if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n        var returnType;\n        if (!hasExitedList) returnType = getType(state);\n        state.localMode = state.localState = null;\n        state.block = blockNormal;\n        state.f = inlineNormal;\n        state.fencedEndRE = null;\n        state.code = 0;\n        state.thisLine.fencedCodeEnd = true;\n        if (hasExitedList) return switchBlock(stream, state, state.block);\n        return returnType;\n      } else if (state.localMode) {\n        return state.localMode.token(stream, state.localState);\n      } else {\n        stream.skipToEnd();\n        return tokenTypes.code;\n      }\n    } // Inline\n\n\n    function getType(state) {\n      var styles = [];\n\n      if (state.formatting) {\n        styles.push(tokenTypes.formatting);\n        if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n        for (var i = 0; i < state.formatting.length; i++) {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n          if (state.formatting[i] === \"header\") {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n          } // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n          // Add `error` instead if the maximum blockquote nesting depth is passed\n\n\n          if (state.formatting[i] === \"quote\") {\n            if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n              styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n            } else {\n              styles.push(\"error\");\n            }\n          }\n        }\n      }\n\n      if (state.taskOpen) {\n        styles.push(\"meta\");\n        return styles.length ? styles.join(' ') : null;\n      }\n\n      if (state.taskClosed) {\n        styles.push(\"property\");\n        return styles.length ? styles.join(' ') : null;\n      }\n\n      if (state.linkHref) {\n        styles.push(tokenTypes.linkHref, \"url\");\n      } else {\n        // Only apply inline styles to non-url text\n        if (state.strong) {\n          styles.push(tokenTypes.strong);\n        }\n\n        if (state.em) {\n          styles.push(tokenTypes.em);\n        }\n\n        if (state.strikethrough) {\n          styles.push(tokenTypes.strikethrough);\n        }\n\n        if (state.emoji) {\n          styles.push(tokenTypes.emoji);\n        }\n\n        if (state.linkText) {\n          styles.push(tokenTypes.linkText);\n        }\n\n        if (state.code) {\n          styles.push(tokenTypes.code);\n        }\n\n        if (state.image) {\n          styles.push(tokenTypes.image);\n        }\n\n        if (state.imageAltText) {\n          styles.push(tokenTypes.imageAltText, \"link\");\n        }\n\n        if (state.imageMarker) {\n          styles.push(tokenTypes.imageMarker);\n        }\n      }\n\n      if (state.header) {\n        styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header);\n      }\n\n      if (state.quote) {\n        styles.push(tokenTypes.quote); // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n\n        if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n          styles.push(tokenTypes.quote + \"-\" + state.quote);\n        } else {\n          styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n        }\n      }\n\n      if (state.list !== false) {\n        var listMod = (state.listStack.length - 1) % 3;\n\n        if (!listMod) {\n          styles.push(tokenTypes.list1);\n        } else if (listMod === 1) {\n          styles.push(tokenTypes.list2);\n        } else {\n          styles.push(tokenTypes.list3);\n        }\n      }\n\n      if (state.trailingSpaceNewLine) {\n        styles.push(\"trailing-space-new-line\");\n      } else if (state.trailingSpace) {\n        styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n      }\n\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    function handleText(stream, state) {\n      if (stream.match(textRE, true)) {\n        return getType(state);\n      }\n\n      return undefined;\n    }\n\n    function inlineNormal(stream, state) {\n      var style = state.text(stream, state);\n      if (typeof style !== 'undefined') return style;\n\n      if (state.list) {\n        // List marker (*, +, -, 1., etc)\n        state.list = null;\n        return getType(state);\n      }\n\n      if (state.taskList) {\n        var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n        if (taskOpen) state.taskOpen = true;else state.taskClosed = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"task\";\n        state.taskList = false;\n        return getType(state);\n      }\n\n      state.taskOpen = false;\n      state.taskClosed = false;\n\n      if (state.header && stream.match(/^#+$/, true)) {\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        return getType(state);\n      }\n\n      var ch = stream.next(); // Matches link titles present on next line\n\n      if (state.linkTitle) {\n        state.linkTitle = false;\n        var matchCh = ch;\n\n        if (ch === '(') {\n          matchCh = ')';\n        }\n\n        matchCh = (matchCh + '').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n        var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n\n        if (stream.match(new RegExp(regex), true)) {\n          return tokenTypes.linkHref;\n        }\n      } // If this block is changed, it may need to be updated in GFM mode\n\n\n      if (ch === '`') {\n        var previousFormatting = state.formatting;\n        if (modeCfg.highlightFormatting) state.formatting = \"code\";\n        stream.eatWhile('`');\n        var count = stream.current().length;\n\n        if (state.code == 0 && (!state.quote || count == 1)) {\n          state.code = count;\n          return getType(state);\n        } else if (count == state.code) {\n          // Must be exact\n          var t = getType(state);\n          state.code = 0;\n          return t;\n        } else {\n          state.formatting = previousFormatting;\n          return getType(state);\n        }\n      } else if (state.code) {\n        return getType(state);\n      }\n\n      if (ch === '\\\\') {\n        stream.next();\n\n        if (modeCfg.highlightFormatting) {\n          var type = getType(state);\n          var formattingEscape = tokenTypes.formatting + \"-escape\";\n          return type ? type + \" \" + formattingEscape : formattingEscape;\n        }\n      }\n\n      if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n        state.imageMarker = true;\n        state.image = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        return getType(state);\n      }\n\n      if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n        state.imageMarker = false;\n        state.imageAltText = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        return getType(state);\n      }\n\n      if (ch === ']' && state.imageAltText) {\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        var type = getType(state);\n        state.imageAltText = false;\n        state.image = false;\n        state.inline = state.f = linkHref;\n        return type;\n      }\n\n      if (ch === '[' && !state.image) {\n        if (state.linkText && stream.match(/^.*?\\]/)) return getType(state);\n        state.linkText = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        return getType(state);\n      }\n\n      if (ch === ']' && state.linkText) {\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n        state.linkText = false;\n        state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal;\n        return type;\n      }\n\n      if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n        state.f = state.inline = linkInline;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n\n        if (type) {\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n\n        return type + tokenTypes.linkInline;\n      }\n\n      if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n        state.f = state.inline = linkInline;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n\n        if (type) {\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n\n        return type + tokenTypes.linkEmail;\n      }\n\n      if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n        var end = stream.string.indexOf(\">\", stream.pos);\n\n        if (end != -1) {\n          var atts = stream.string.substring(stream.start, end);\n          if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n        }\n\n        stream.backUp(1);\n        state.htmlState = CodeMirror.startState(htmlMode);\n        return switchBlock(stream, state, htmlBlock);\n      }\n\n      if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n        state.md_inside = false;\n        return \"tag\";\n      } else if (ch === \"*\" || ch === \"_\") {\n        var len = 1,\n            before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2);\n\n        while (len < 3 && stream.eat(ch)) len++;\n\n        var after = stream.peek() || \" \"; // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n\n        var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before));\n        var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after));\n        var setEm = null,\n            setStrong = null;\n\n        if (len % 2) {\n          // Em\n          if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before))) setEm = true;else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after))) setEm = false;\n        }\n\n        if (len > 1) {\n          // Strong\n          if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before))) setStrong = true;else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after))) setStrong = false;\n        }\n\n        if (setStrong != null || setEm != null) {\n          if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\";\n          if (setEm === true) state.em = ch;\n          if (setStrong === true) state.strong = ch;\n          var t = getType(state);\n          if (setEm === false) state.em = false;\n          if (setStrong === false) state.strong = false;\n          return t;\n        }\n      } else if (ch === ' ') {\n        if (stream.eat('*') || stream.eat('_')) {\n          // Probably surrounded by spaces\n          if (stream.peek() === ' ') {\n            // Surrounded by spaces, ignore\n            return getType(state);\n          } else {\n            // Not surrounded by spaces, back up pointer\n            stream.backUp(1);\n          }\n        }\n      }\n\n      if (modeCfg.strikethrough) {\n        if (ch === '~' && stream.eatWhile(ch)) {\n          if (state.strikethrough) {\n            // Remove strikethrough\n            if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n            var t = getType(state);\n            state.strikethrough = false;\n            return t;\n          } else if (stream.match(/^[^\\s]/, false)) {\n            // Add strikethrough\n            state.strikethrough = true;\n            if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n            return getType(state);\n          }\n        } else if (ch === ' ') {\n          if (stream.match('~~', true)) {\n            // Probably surrounded by space\n            if (stream.peek() === ' ') {\n              // Surrounded by spaces, ignore\n              return getType(state);\n            } else {\n              // Not surrounded by spaces, back up pointer\n              stream.backUp(2);\n            }\n          }\n        }\n      }\n\n      if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n        state.emoji = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n        var retType = getType(state);\n        state.emoji = false;\n        return retType;\n      }\n\n      if (ch === ' ') {\n        if (stream.match(/^ +$/, false)) {\n          state.trailingSpace++;\n        } else if (state.trailingSpace) {\n          state.trailingSpaceNewLine = true;\n        }\n      }\n\n      return getType(state);\n    }\n\n    function linkInline(stream, state) {\n      var ch = stream.next();\n\n      if (ch === \">\") {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n\n        if (type) {\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n\n        return type + tokenTypes.linkInline;\n      }\n\n      stream.match(/^[^>]+/, true);\n      return tokenTypes.linkInline;\n    }\n\n    function linkHref(stream, state) {\n      // Check if space, and return NULL if so (to avoid marking the space)\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var ch = stream.next();\n\n      if (ch === '(' || ch === '[') {\n        state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        state.linkHref = true;\n        return getType(state);\n      }\n\n      return 'error';\n    }\n\n    var linkRE = {\n      \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n      \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n    };\n\n    function getLinkHrefInside(endChar) {\n      return function (stream, state) {\n        var ch = stream.next();\n\n        if (ch === endChar) {\n          state.f = state.inline = inlineNormal;\n          if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n          var returnState = getType(state);\n          state.linkHref = false;\n          return returnState;\n        }\n\n        stream.match(linkRE[endChar]);\n        state.linkHref = true;\n        return getType(state);\n      };\n    }\n\n    function footnoteLink(stream, state) {\n      if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n        state.f = footnoteLinkInside;\n        stream.next(); // Consume [\n\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        state.linkText = true;\n        return getType(state);\n      }\n\n      return switchInline(stream, state, inlineNormal);\n    }\n\n    function footnoteLinkInside(stream, state) {\n      if (stream.match(']:', true)) {\n        state.f = state.inline = footnoteUrl;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var returnType = getType(state);\n        state.linkText = false;\n        return returnType;\n      }\n\n      stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n      return tokenTypes.linkText;\n    }\n\n    function footnoteUrl(stream, state) {\n      // Check if space, and return NULL if so (to avoid marking the space)\n      if (stream.eatSpace()) {\n        return null;\n      } // Match URL\n\n\n      stream.match(/^[^\\s]+/, true); // Check for link title\n\n      if (stream.peek() === undefined) {\n        // End of line, set flag to check next line\n        state.linkTitle = true;\n      } else {\n        // More content on line, check if link title\n        stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\.)+\"|'(?:[^'\\\\]|\\\\.)+'|\\((?:[^)\\\\]|\\\\.)+\\)))?/, true);\n      }\n\n      state.f = state.inline = inlineNormal;\n      return tokenTypes.linkHref + \" url\";\n    }\n\n    var mode = {\n      startState: function () {\n        return {\n          f: blockNormal,\n          prevLine: {\n            stream: null\n          },\n          thisLine: {\n            stream: null\n          },\n          block: blockNormal,\n          htmlState: null,\n          indentation: 0,\n          inline: inlineNormal,\n          text: handleText,\n          formatting: false,\n          linkText: false,\n          linkHref: false,\n          linkTitle: false,\n          code: 0,\n          em: false,\n          strong: false,\n          header: 0,\n          setext: 0,\n          hr: false,\n          taskList: false,\n          list: false,\n          listStack: [],\n          quote: 0,\n          trailingSpace: 0,\n          trailingSpaceNewLine: false,\n          strikethrough: false,\n          emoji: false,\n          fencedEndRE: null\n        };\n      },\n      copyState: function (s) {\n        return {\n          f: s.f,\n          prevLine: s.prevLine,\n          thisLine: s.thisLine,\n          block: s.block,\n          htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n          indentation: s.indentation,\n          localMode: s.localMode,\n          localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n          inline: s.inline,\n          text: s.text,\n          formatting: false,\n          linkText: s.linkText,\n          linkTitle: s.linkTitle,\n          linkHref: s.linkHref,\n          code: s.code,\n          em: s.em,\n          strong: s.strong,\n          strikethrough: s.strikethrough,\n          emoji: s.emoji,\n          header: s.header,\n          setext: s.setext,\n          hr: s.hr,\n          taskList: s.taskList,\n          list: s.list,\n          listStack: s.listStack.slice(0),\n          quote: s.quote,\n          indentedCode: s.indentedCode,\n          trailingSpace: s.trailingSpace,\n          trailingSpaceNewLine: s.trailingSpaceNewLine,\n          md_inside: s.md_inside,\n          fencedEndRE: s.fencedEndRE\n        };\n      },\n      token: function (stream, state) {\n        // Reset state.formatting\n        state.formatting = false;\n\n        if (stream != state.thisLine.stream) {\n          state.header = 0;\n          state.hr = false;\n\n          if (stream.match(/^\\s*$/, true)) {\n            blankLine(state);\n            return null;\n          }\n\n          state.prevLine = state.thisLine;\n          state.thisLine = {\n            stream: stream\n          }; // Reset state.taskList\n\n          state.taskList = false; // Reset state.trailingSpace\n\n          state.trailingSpace = 0;\n          state.trailingSpaceNewLine = false;\n\n          if (!state.localState) {\n            state.f = state.block;\n\n            if (state.f != htmlBlock) {\n              var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n              state.indentation = indentation;\n              state.indentationDiff = null;\n              if (indentation > 0) return null;\n            }\n          }\n        }\n\n        return state.f(stream, state);\n      },\n      innerMode: function (state) {\n        if (state.block == htmlBlock) return {\n          state: state.htmlState,\n          mode: htmlMode\n        };\n        if (state.localState) return {\n          state: state.localState,\n          mode: state.localMode\n        };\n        return {\n          state: state,\n          mode: mode\n        };\n      },\n      indent: function (state, textAfter, line) {\n        if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line);\n        if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);\n        return CodeMirror.Pass;\n      },\n      blankLine: blankLine,\n      getType: getType,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\",\n      fold: \"markdown\"\n    };\n    return mode;\n  }, \"xml\");\n  CodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n  CodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","cmCfg","modeCfg","htmlMode","getMode","htmlModeMissing","name","findModeByName","found","mime","mimes","mode","highlightFormatting","undefined","maxBlockquoteDepth","taskLists","strikethrough","emoji","fencedCodeBlockHighlighting","fencedCodeBlockDefaultMode","xml","tokenTypeOverrides","tokenTypes","header","code","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","expandedTab","switchInline","stream","state","f","inline","switchBlock","block","lineIsEmpty","line","test","string","blankLine","linkTitle","indentedCode","htmlBlock","exit","inner","innerMode","htmlState","tagStart","context","tokenize","isInText","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","length","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","match","skipToEnd","eatSpace","getType","eat","setext","listType","current","push","taskList","fencedEndRE","RegExp","localMode","localState","startState","local","lookAhead","charAt","peek","footnoteLink","style","token","md_inside","indexOf","currListInd","hasExitedList","maxFencedEndInd","returnType","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","next","matchCh","replace","regex","previousFormatting","eatWhile","count","t","type","formattingEscape","end","pos","atts","substring","start","backUp","len","before","after","leftFlanking","rightFlanking","setEm","setStrong","retType","getLinkHrefInside","linkRE","endChar","returnState","footnoteLinkInside","footnoteUrl","copyState","s","slice","indent","textAfter","Pass","blockCommentStart","blockCommentEnd","closeBrackets","fold","defineMIME"],"sources":["C:/Users/Ernest/Desktop/mern-blog-frontend-master/node_modules/codemirror/mode/markdown/markdown.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.fencedCodeBlockDefaultMode === undefined)\n    modeCfg.fencedCodeBlockDefaultMode = 'text/plain';\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ {0,3}(?:\\={1,}|-{2,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w\\/+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      var exit = htmlModeMissing\n      if (!exit) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n          (!inner.state.context && inner.state.tokenize.isInText)\n      }\n      if (exit) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n      // Reset inline styles which shouldn't propagate across list items\n      state.em = false;\n      state.strong = false;\n      state.code = false;\n      state.strikethrough = false;\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2] || modeCfg.fencedCodeBlockDefaultMode );\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match('~~', true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(']:', true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\.)+\"|'(?:[^'\\\\]|\\\\.)+'|\\((?:[^)\\\\]|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}