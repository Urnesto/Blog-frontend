{"version":3,"sources":["../src/SimpleMdeReact.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport SimpleMDE, { Options } from \"easymde\";\n\nimport type {\n  Doc,\n  Editor,\n  EditorChange,\n  EditorChangeCancellable,\n  EditorChangeLinkedList,\n  EditorSelectionChange,\n  KeyMap,\n  LineHandle,\n  Position,\n} from \"codemirror\";\n\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\nexport type DOMEvent =\n  | \"mousedown\"\n  | \"dblclick\"\n  | \"touchstart\"\n  | \"contextmenu\"\n  | \"keydown\"\n  | \"keypress\"\n  | \"keyup\"\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"dragstart\"\n  | \"dragenter\"\n  | \"dragover\"\n  | \"dragleave\"\n  | \"drop\";\n\nexport type CopyEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof DocumentAndElementEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: DocumentAndElementEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type GlobalEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof GlobalEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: GlobalEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type DefaultEvent = (instance: Editor, ...args: any[]) => void;\n\nexport type IndexEventsSignature = {\n  [key: string]: DefaultEvent | undefined;\n};\n\nexport interface SimpleMdeToCodemirrorEvents\n  extends CopyEvents,\n    GlobalEvents,\n    IndexEventsSignature {\n  change?: (instance: Editor, changeObj: EditorChangeLinkedList) => void;\n  changes?: (instance: Editor, changes: EditorChangeLinkedList[]) => void;\n  beforeChange?: (instance: Editor, changeObj: EditorChangeCancellable) => void;\n  cursorActivity?: (instance: Editor) => void;\n  keyHandled?: (instance: Editor, name: string, event: KeyboardEvent) => void;\n  inputRead?: (instance: Editor, changeObj: EditorChange) => void;\n  electricInput?: (instance: Editor, line: number) => void;\n  beforeSelectionChange?: (\n    instance: Editor,\n    obj: EditorSelectionChange\n  ) => void;\n  viewportChange?: (instance: Editor, from: number, to: number) => void;\n  swapDoc?: (instance: Editor, oldDoc: Doc) => void;\n  gutterClick?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    clickEvent: MouseEvent\n  ) => void;\n  gutterContextMenu?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    contextMenu: MouseEvent\n  ) => void;\n  focus?: (instance: Editor, event: FocusEvent) => void;\n  blur?: (instance: Editor, event: FocusEvent) => void;\n  scroll?: (instance: Editor) => void;\n  refresh?: (instance: Editor) => void;\n  optionChange?: (instance: Editor, option: string) => void;\n  scrollCursorIntoView?: (instance: Editor, event: Event) => void;\n  update?: (instance: Editor) => void;\n  renderLine?: (\n    instance: Editor,\n    line: LineHandle,\n    element: HTMLElement\n  ) => void;\n  overwriteToggle?: (instance: Editor, overwrite: boolean) => void;\n}\n\nexport type GetMdeInstance = (instance: SimpleMDE) => void;\nexport type GetCodemirrorInstance = (instance: Editor) => void;\nexport type GetLineAndCursor = (instance: Position) => void;\n\nexport interface SimpleMDEReactProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  id?: string;\n  onChange?: (value: string) => void;\n  value?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirrorEvents;\n  getMdeInstance?: GetMdeInstance;\n  getCodemirrorInstance?: GetCodemirrorInstance;\n  getLineAndCursor?: GetLineAndCursor;\n}\n\nconst useHandleEditorInstanceLifecycle = ({\n  options,\n  id,\n  currentValueRef,\n  textRef,\n}: {\n  options?: Options;\n  id: string;\n  currentValueRef: React.MutableRefObject<string | undefined>;\n  textRef: HTMLTextAreaElement | null;\n}) => {\n  const [editor, setEditor] = useState<SimpleMDE | null>(null);\n\n  const imageUploadCallback = useCallback(\n    (\n      file: File,\n      onSuccess: (url: string) => void,\n      onError: (error: string) => void\n    ) => {\n      const imageUpload = options?.imageUploadFunction;\n      if (imageUpload) {\n        const _onSuccess = (url: string) => {\n          onSuccess(url);\n        };\n        imageUpload(file, _onSuccess, onError);\n      }\n    },\n    [options?.imageUploadFunction]\n  );\n\n  const editorRef = useRef(editor);\n  editorRef.current = editor;\n\n  useEffect(() => {\n    let editor: SimpleMDE\n    if (textRef) {\n      const initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current,\n      }\n      const imageUploadFunction = options?.imageUploadFunction\n        ? imageUploadCallback\n        : undefined\n      editor = new SimpleMDE(\n        Object.assign({}, initialOptions, options, {\n          imageUploadFunction,\n        })\n      )\n      setEditor(editor)\n    }\n    return () => {\n      editor?.toTextArea()\n      // @ts-expect-error\n      editor?.cleanup()\n    }\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n\n  const codemirror = useMemo(() => {\n    return editor?.codemirror;\n  }, [editor?.codemirror]) as Editor | undefined;\n  return { editor, codemirror };\n};\n\nexport const SimpleMdeReact = React.forwardRef<\n  HTMLDivElement,\n  SimpleMDEReactProps\n>((props, ref) => {\n  const {\n    events,\n    value,\n    options,\n    children,\n    extraKeys,\n    getLineAndCursor,\n    getMdeInstance,\n    getCodemirrorInstance,\n    onChange,\n    id: anId,\n    ...rest\n  } = props;\n\n  const id = useMemo(() => anId ?? generateId(), [anId]);\n\n  const elementWrapperRef = useRef<HTMLDivElement | null>(null);\n  const nonEventChangeRef = useRef<boolean>(true);\n\n  // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n  const currentValueRef = useRef(value);\n  currentValueRef.current = value;\n\n  const [textRef, setTextRef] = useState<HTMLTextAreaElement | null>(null)\n  const { editor, codemirror } = useHandleEditorInstanceLifecycle({\n    options,\n    id,\n    currentValueRef,\n    textRef,\n  });\n\n  useEffect(() => {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor?.value(value ?? \"\");\n    }\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n\n  const onCodemirrorChangeHandler = useCallback(() => {\n    if (editor?.value() !== currentValueRef.current) {\n      nonEventChangeRef.current = false;\n      onChange?.(editor?.value() ?? \"\");\n    }\n  }, [editor, onChange]);\n\n  useEffect(() => {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options?.autofocus) {\n      codemirror?.focus();\n      codemirror?.setCursor(codemirror?.lineCount(), 0);\n    }\n  }, [codemirror, options?.autofocus]);\n\n  const getCursorCallback = useCallback(() => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && getLineAndCursor?.(codemirror.getDoc().getCursor());\n  }, [codemirror, getLineAndCursor]);\n\n  useEffect(() => {\n    getCursorCallback();\n  }, [getCursorCallback]);\n\n  useEffect(() => {\n    editor && getMdeInstance?.(editor);\n  }, [editor, getMdeInstance]);\n\n  useEffect(() => {\n    codemirror && getCodemirrorInstance?.(codemirror);\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n\n  useEffect(() => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\n        \"extraKeys\",\n        Object.assign({}, extraKeys, codemirror.getOption(\"extraKeys\"))\n      );\n    }\n  }, [codemirror, extraKeys]);\n\n  useEffect(() => {\n    const toolbarNode = elementWrapperRef.current?.getElementsByClassName(\n      \"editor-toolbarNode\"\n    )[0];\n    const handler = () => codemirror && onCodemirrorChangeHandler();\n    toolbarNode?.addEventListener(\"click\", handler);\n\n    return () => {\n      toolbarNode?.removeEventListener(\"click\", handler);\n    };\n  }, [codemirror, onCodemirrorChangeHandler]);\n\n  useEffect(() => {\n    codemirror?.on(\"change\", onCodemirrorChangeHandler);\n    codemirror?.on(\"cursorActivity\", getCursorCallback);\n    return () => {\n      codemirror?.off(\"change\", onCodemirrorChangeHandler);\n      codemirror?.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n\n  const prevEvents = useRef(events);\n\n  useEffect(() => {\n    const isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun &&\n      prevEvents.current &&\n      Object.entries(prevEvents.current).forEach(([event, handler]) => {\n        handler && codemirror?.off(event, handler);\n      });\n\n    events &&\n      Object.entries(events).forEach(([event, handler]) => {\n        handler && codemirror?.on(event, handler);\n      });\n    prevEvents.current = events;\n    return () => {\n      events &&\n        Object.entries(events).forEach(([event, handler]) => {\n          handler && codemirror?.off(event, handler);\n        });\n    };\n  }, [codemirror, events]);\n\n  return (\n    <div\n      id={`${id}-wrapper`}\n      {...rest}\n      ref={(aRef) => {\n        if (typeof ref === \"function\") {\n          ref(aRef);\n        } else if (ref) {\n          ref.current = aRef;\n        }\n        elementWrapperRef.current = aRef;\n      }}\n    >\n      <textarea id={id} ref={setTextRef} style={{ display: \"none\" }} />\n    </div>\n  );\n});\n\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\n\nexport default SimpleMdeReact;\n"]}